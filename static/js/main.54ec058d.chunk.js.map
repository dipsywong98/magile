{"version":3,"sources":["../node_modules/peerjs/dist sync","GameAction.ts","types.ts","GameState.ts","components/Deck.tsx","constants.ts","utils.ts","GameReducer.ts","aiAction.ts","withGameNetwork.tsx","assets/index.ts","assets/angel_guard.png","assets/dark_magile.png","assets/earth_mage.png","assets/earth_missile.png","assets/fire_mage.png","assets/fire_missile.png","assets/hetero_ignite.png","assets/homo_ignite.png","assets/light_magile.png","assets/thunder_mage.png","assets/thunder_missile.png","assets/water_mage.png","assets/water_missile.png","assets/wind_mage.png","assets/wind_missile.png","components/Card.tsx","Game.tsx","components/GameRenderer.tsx","i18ns/index.ts","i18ns/en.tsx","i18ns/zh.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","GameActionType","ICard","IMode","ICardType","ICardColor","GameState","maxPlayer","minPlayer","turn","direction","points","drawDeck","stage","mode","trashDeck","playerDeck","playerHp","logs","lastAction","ignited","duel","GenericBoardGameState","ChooseCardFor","allColors","EARTH","WATER","FIRE","WIND","THUNDER","LIGHT","DARK","cardCount","EARTH_MAGE","WATER_MAGE","FIRE_MAGE","WIND_MAGE","THUNDER_MAGE","EARTH_MISSILE","WATER_MISSILE","FIRE_MISSILE","WIND_MISSILE","THUNDER_MISSILE","LIGHT_MAGILE","DARK_MAGILE","HOMO_IGNITE","HETERO_IGNITE","ANGEL_GUARD","basicDamage","count","HOMO","HETERO","getCardType","card","MAGE","MISSILE","MAGILE","IGNITE","areCardsOfTypeOrMagile","cards","type","reduce","prev","curr","cardType","getCardColor","NONE","withDrawCard","playerId","state","length","players","undefined","shuffle","hand","slice","withEnsureHp1CardNotFunctionCard","compose","withDiscardCard","withInitGame","prevState","winner","fullDeck","Object","entries","flatMap","Array","fill","forEach","index","indexOf","splice","withPutToPlayed","withCardNumberValidation","_","withCardTypeValidation","map","includes","withFirstPlayValidation","withPlayHomo","cardColor","color","areCardsOfColor","withPlayHetero","find","hasCardColorNone","seenColor","Set","filteredCards","filter","add","size","areCardsOfDifferentColor","stageColors","join","withPlayIgnite","withPlayAngleGuard","withStateChangedValidation","withIncrementTurn","nextPlayerId","withCheckWin","playerIdLose","findIndex","hp","withCheckHit","ableToResponse","withHit","igniteCount","hit","withCheckDiscardToHp","payload","withClearStage","GameReducer","action","peerId","nameDict","members","GameActionTypes","START","PLAY_CARD","nextState","playCard","withPlayCard","JSON","parse","stringify","DISCARD_CARD","step","TAKE_HIT","END","started","ready","aiAction","Poker99Context","createContext","usePoker99","network","useContext","cardImages","angel_guard","dark_magile","earth_mage","earth_missile","fire_mage","fire_missile","hetero_ignite","homo_ignite","light_magile","thunder_mage","thunder_missile","water_mage","water_missile","wind_mage","wind_missile","useStyle","makeStyles","root","padding","width","height","borderRadius","cursor","userSelect","transition","transformOrigin","Card","style","onClick","disabled","selected","isDelete","classes","Paper","elevation","pointerEvents","backgroundImage","backgroundSize","position","className","fontFamily","margin","textShadow","top","right","CancelOutlined","red","fontSize","green","DURATION","PlaceHolder","maxWidth","useState","setWidth","useEffect","setTimeout","minWidth","Deck","hide","reveal","onCardsChoose","chooseCardFor","takeHit","myTurn","playedIndices","setPlayedIndices","hovering","setHovering","playGetCardAnimation","setPlayGetCardAnimation","discardingAnimation","setDiscardingAnimation","useReducer","delete","dispatchSelected","handleCardClick","a","has","handlePlayCards","param","laterSetDiscardingAnimation","DISCARD","k","then","from","catch","console","error","withMaxWidth","children","noPad","onMouseEnter","onTouchStart","onMouseLeave","onTouchEnd","bottom","left","zIndex","transform","textAlign","display","Button","variant","Visibility","RESPOND_PLAY","title","window","confirm","Flag","marginLeft","PlayArrow","FIRST_PLAY","Delete","justifyContent","flexWrap","cardsToRender","j","i","push","getPlayedCards","Game","dispatch","dispatchAs","myPlayerId","myLocals","hideDeck","setHideDeck","setError","renderedDeckId","throttledRenderedId","setTrottledRenderedId","handleError","message","dispatchHelper","discardCard","handleCardChoose","maxHeight","reverse","s","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","GameRenderer","prevCardPayload","setPrevCardPayload","startAnimateCard","setStartAnimateCard","showAnimateCard","setShowAnimateCard","again","status","computeDamage","hint","backgroundColor","boxShadow","border","i18ns","en","gamenetI18n","magile","howToPlay","howToPlayContent","zh","App","withGamenetI18n","Component","WithGameNetwork","props","useBoardGameNetwork","myAis","n","clearTimeout","Provider","value","displayName","withGameNetwork","i18n","useGamenetI18n","gameAppState","fullPage","gameName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54ec058d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 196;","// GameAction.ts\r\n\r\nimport { GameActionTypes, GenericBoardGameAction } from 'gamenet'\r\nimport { ICard, IMode } from './types'\r\nimport { NetworkAction } from 'smnet'\r\n\r\nexport enum GameActionType {\r\n  PLAY_CARD,\r\n  END,\r\n  DISCARD_CARD,\r\n  TAKE_HIT\r\n}\r\n\r\nexport interface PlayCardPayload {\r\n  cards: ICard[]\r\n  mode?: IMode\r\n}\r\n\r\nexport type GameAction = (({\r\n  type: GameActionType.DISCARD_CARD\r\n  payload: PlayCardPayload\r\n} | {\r\n  type: GameActionType.PLAY_CARD\r\n  payload: PlayCardPayload\r\n} | {\r\n  type: GameActionType.END\r\n} | {\r\n  type: GameActionType.TAKE_HIT\r\n} | {\r\n  type: GameActionTypes\r\n  payload: never\r\n}) & NetworkAction) | GenericBoardGameAction\r\n","import { GameState } from './GameState'\r\nimport { PlayCardPayload } from './GameAction'\r\n\r\nexport enum ICard {\r\n  EARTH_MAGE = 'earth_mage',\r\n  WATER_MAGE = 'water_mage',\r\n  FIRE_MAGE = 'fire_mage',\r\n  WIND_MAGE = 'wind_mage',\r\n  THUNDER_MAGE = 'thunder_mage',\r\n  EARTH_MISSILE = 'earth_missile',\r\n  WATER_MISSILE = 'water_missile',\r\n  FIRE_MISSILE = 'fire_missile',\r\n  WIND_MISSILE = 'wind_missile',\r\n  THUNDER_MISSILE = 'thunder_missile',\r\n  LIGHT_MAGILE = 'light_magile',\r\n  DARK_MAGILE = 'dark_magile',\r\n  HOMO_IGNITE = 'homo_ignite',\r\n  HETERO_IGNITE = 'hetero_ignite',\r\n  ANGEL_GUARD = 'angel_guard'\r\n}\r\n\r\nexport enum IMode {\r\n  HOMO,\r\n  HETERO\r\n}\r\n\r\nexport type IDeck = ICard[]\r\n\r\nexport type IStateMapper = (prevState: GameState) => GameState\r\n\r\nexport type IsCard = (card: ICard) => boolean\r\n\r\nexport type IPlayCard = (payload: PlayCardPayload, playerId: number) => IStateMapper\r\n\r\nexport enum ICardType {\r\n  MAGE='mage',\r\n  MISSILE='missile',\r\n  MAGILE='magile',\r\n  IGNITE='ignite',\r\n  ANGEL_GUARD='angel_guard'\r\n}\r\n\r\nexport enum ICardColor {\r\n  NONE= 'none',\r\n  EARTH= 'earth',\r\n  WATER= 'water',\r\n  FIRE= 'fire',\r\n  WIND= 'wind',\r\n  THUNDER= 'thunder',\r\n  LIGHT= 'light',\r\n  DARK= 'dark'\r\n}\r\n\r\nexport const allColors: ICardColor[] = [\r\n  ICardColor.EARTH,\r\n  ICardColor.WATER,\r\n  ICardColor.FIRE,\r\n  ICardColor.WIND,\r\n  ICardColor.THUNDER,\r\n  ICardColor.LIGHT,\r\n  ICardColor.DARK,\r\n]\r\n","// Poker99State.ts\r\n\r\nimport { GenericBoardGameState } from 'gamenet'\r\nimport { IDeck, IMode } from './types'\r\nimport { PlayCardPayload } from './GameAction'\r\n\r\nexport class GameState extends GenericBoardGameState {\r\n  [key: string]: unknown | undefined\r\n\r\n  maxPlayer = 8\r\n  minPlayer = 2\r\n  turn = 0\r\n  direction = 1\r\n  points = 0\r\n  drawDeck: IDeck = []\r\n  stage: IDeck = []\r\n  mode: IMode | null = null\r\n  trashDeck: IDeck = []\r\n  playerDeck: IDeck[] = []\r\n  playerHp: number[] = []\r\n  logs: string[] = []\r\n  lastAction: PlayCardPayload & { playerId: number } | null = null\r\n  ignited = false\r\n  duel = false\r\n}\r\n","import React, { FunctionComponent, ReactNode, useEffect, useReducer, useState } from 'react'\nimport { ICard, IMode } from '../types'\nimport { Card } from './Card'\nimport { Button } from '@material-ui/core'\nimport { Delete, Flag, PlayArrow, Visibility } from '@material-ui/icons'\nimport { PlayCardPayload } from '../GameAction'\nimport { Equal, NotEqual } from 'mdi-material-ui'\n\nconst DURATION = 0.3\n\nconst PlaceHolder: FunctionComponent<{ maxWidth: string, style?: Record<string, unknown> }> = ({ maxWidth, style }) => {\n  const [width, setWidth] = useState(maxWidth)\n  useEffect(() => {\n    setTimeout(() => {\n      setWidth('0')\n    }, 1)\n  }, [])\n  return (\n    <div style={{\n      maxWidth: width,\n      minWidth: width,\n      transition: `min-width ${DURATION}s ease-in-out`,\n      position: 'relative',\n      ...style\n    }}/>\n  )\n}\n\nexport enum ChooseCardFor {\n  FIRST_PLAY,\n  RESPOND_PLAY,\n  DISCARD\n}\n\nexport const Deck: FunctionComponent<{\n  cards: ICard[], hide: boolean, reveal: () => void, onCardsChoose: (payload: PlayCardPayload) => Promise<void>, chooseCardFor: ChooseCardFor, takeHit: () => Promise<void>, myTurn?: boolean\n}> = ({ cards, hide, reveal, onCardsChoose, chooseCardFor, takeHit, myTurn }) => {\n  const [playedIndices, setPlayedIndices] = useState<number[]>([])\n  const [hovering, setHovering] = useState<number | null>(null)\n  const [playGetCardAnimation, setPlayGetCardAnimation] = useState(false)\n  const [discardingAnimation, setDiscardingAnimation] = useState(false)\n  const [selected, dispatchSelected] = useReducer<(prev: Set<number>, action: { type: string, payload?: number }) => Set<number>>((prev, {\n    type,\n    payload\n  }) => {\n    switch (type) {\n      case 'add':\n        if (payload !== undefined) {\n          prev.add(payload)\n        }\n        return new Set(prev)\n      case 'delete':\n        if (payload !== undefined) {\n          prev.delete(payload)\n        }\n        return new Set(prev)\n      case 'clear':\n        return new Set()\n      default:\n        return prev\n    }\n  }, new Set<number>())\n  const handleCardClick = async (card: ICard, index: number) => {\n    if (selected.has(index)) {\n      dispatchSelected({ type: 'delete', payload: index })\n    } else {\n      dispatchSelected({ type: 'add', payload: index })\n    }\n  }\n  const handlePlayCards = (param: unknown) => {\n    const mode = param === IMode.HOMO || param === IMode.HETERO ? param : undefined\n    const laterSetDiscardingAnimation = chooseCardFor === ChooseCardFor.DISCARD\n    onCardsChoose({ cards: cards.filter((_, k) => selected.has(k)), mode })\n      .then(() => {\n        setDiscardingAnimation(laterSetDiscardingAnimation)\n        setHovering(null)\n        setPlayedIndices(Array.from(selected))\n        dispatchSelected({ type: 'clear' })\n        setTimeout(() => {\n          setPlayGetCardAnimation(true)\n        }, 1)\n        setTimeout(() => {\n          setPlayGetCardAnimation(false)\n          setPlayedIndices([])\n          setDiscardingAnimation(false)\n        }, 500)\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }\n  const getPlayedCards = () => {\n    const cardsToRender = []\n    let j = 0\n    for (let i = 0; i < cards.length; i++) {\n      if (playedIndices.includes(i)) {\n        cardsToRender.push(null)\n      } else {\n        cardsToRender.push(cards[j])\n        j++\n      }\n    }\n    return discardingAnimation ? [...cardsToRender, ...cards.slice(j)] : cardsToRender\n  }\n  const withMaxWidth = (children: ReactNode, index: number, noPad = false) => (\n    <div\n      style={{\n        padding: noPad ? 0 : '8px',\n        maxWidth: `calc(100vw / ${cards.length + 2})`,\n        transition: `max-width ${DURATION/3}s ease-in-out`\n      }}\n      onMouseEnter={() => setHovering(index)}\n      onTouchStart={() => setHovering(index)}\n      onMouseLeave={() => setHovering(null)}\n      onTouchEnd={() => setHovering(null)}>\n      {children}\n    </div>\n  )\n  return <div style={{\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n    transform: hide ? 'translateY(100%)' : 'translateY(50%)',\n    transition: `transform 0.3s ease-in-out`,\n    pointerEvents: 'none'\n  }}>\n    <div style={{\n      textAlign: 'center',\n      transform: 'translateY(-80px)',\n      margin: 'auto',\n      display: 'block',\n      pointerEvents: 'all'\n    }}>\n      {myTurn ? <>\n      {hide && <Button variant='contained' onClick={reveal}>\n        <Visibility/>\n      </Button>}\n      {!hide && chooseCardFor === ChooseCardFor.RESPOND_PLAY && <>\n        <Button variant='contained'\n          title='take hit'\n          color='secondary'\n          onClick={() => window.confirm('Are you sure you want to take hit?') && takeHit().catch(console.error)}\n        >\n          <Flag/>\n        </Button>\n        <Button style={{marginLeft: '8px'}} variant='contained'\n          title='play'\n          color='primary'\n          onClick={handlePlayCards}\n        >\n          <PlayArrow/>\n        </Button>\n      </>}\n      {!hide && chooseCardFor === ChooseCardFor.FIRST_PLAY && <>\n        <Button variant='contained'\n          title='homo'\n          color='primary'\n          onClick={() => handlePlayCards(IMode.HOMO)}\n        >\n          <Equal/>\n        </Button>\n        <Button style={{marginLeft: '8px'}} variant='contained'\n          title='hetero'\n          color='primary'\n          onClick={() => handlePlayCards(IMode.HETERO)}\n        >\n          <NotEqual/>\n        </Button>\n      </>}\n      {!hide && chooseCardFor === ChooseCardFor.DISCARD && <>\n        <Button variant='contained'\n          color='secondary'\n          title='trash'\n          onClick={handlePlayCards}\n        >\n          <Delete/>\n        </Button>\n      </>}\n      </>: 'not your turn'}\n    </div>\n    <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'nowrap' }}>\n      {\n        getPlayedCards().map((card, index) => (\n          card === null\n            ? <PlaceHolder key={index} maxWidth={`calc(100vw / ${cards.length + 2} + 16px)`}/>\n            : withMaxWidth(<Card\n              card={card}\n              onClick={() => handleCardClick(card, index)}\n              disabled={hide}\n              style={{ transform: (hovering === index || selected.has(index)) ? 'translateY(-30%)' : 'translateY(-15%)' }}\n              selected={selected.has(index)}\n              isDelete={chooseCardFor === ChooseCardFor.DISCARD}\n            />, index)))\n      }\n      {playedIndices.length > 0 && !discardingAnimation && <div style={{\n        maxWidth: playGetCardAnimation ? `calc((100vw / ${cards.length + 2} + 16px) * ${playedIndices.length})` : '0',\n        transition: `max-width ${DURATION}s ease-in-out`,\n        display: 'flex',\n        flexWrap: 'nowrap'\n      }}>\n        {\n          cards.slice(cards.length - playedIndices.length).map((card, index) => (\n            withMaxWidth(\n              <Card\n                card={card}\n                onClick={() => handleCardClick(card, index)}\n                disabled={hide}\n                style={{ transform: !playGetCardAnimation ? 'translateX(100vw)' : undefined }}\n                selected={selected.has(index)}\n              />\n              , index + cards.length, false\n            )\n          ))\n        }\n      </div>}\n    </div>\n  </div>\n}\n","import { ICard } from './types'\r\n\r\nexport const cardCount = {\r\n  [ICard.EARTH_MAGE]: 9,\r\n  [ICard.WATER_MAGE]: 9,\r\n  [ICard.FIRE_MAGE]: 9,\r\n  [ICard.WIND_MAGE]: 9,\r\n  [ICard.THUNDER_MAGE]: 9,\r\n  [ICard.EARTH_MISSILE]: 9,\r\n  [ICard.WATER_MISSILE]: 9,\r\n  [ICard.FIRE_MISSILE]: 9,\r\n  [ICard.WIND_MISSILE]: 9,\r\n  [ICard.THUNDER_MISSILE]: 9,\r\n  [ICard.LIGHT_MAGILE]: 3,\r\n  [ICard.DARK_MAGILE]: 3,\r\n  [ICard.HOMO_IGNITE]: 3,\r\n  [ICard.HETERO_IGNITE]: 3,\r\n  [ICard.ANGEL_GUARD]: 6\r\n}\r\n","import { ICard, ICardColor, ICardType, IMode } from './types'\r\nimport { GameState } from './GameState'\r\n\r\nexport const basicDamage = (count: number, mode: IMode|null): number => {\r\n  switch (mode) {\r\n    case IMode.HOMO:\r\n      switch (count) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n          return 1\r\n        case 5:\r\n        case 6:\r\n        case 7:\r\n          return 2\r\n        default:\r\n          return 3\r\n      }\r\n    case IMode.HETERO:\r\n      switch (count) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n          return 1\r\n        case 5:\r\n        case 6:\r\n          return 2\r\n        default:\r\n          return 3\r\n      }\r\n      default:\r\n        return 0\r\n  }\r\n}\r\n\r\nexport const computeDamage = (state: GameState) => {\r\n  const igniteCount = state.stage.filter(card => getCardType(card) === ICardType.IGNITE).length\r\n  const basic = basicDamage(state.stage.filter(card => getCardColor(card) !== ICardColor.NONE).length, state.mode)\r\n  return basic + igniteCount + (state.duel ? 1 : 0)\r\n}\r\n\r\nexport const getCardType = (card: ICard): ICardType => {\r\n  switch (card) {\r\n    case ICard.EARTH_MAGE:\r\n    case ICard.WATER_MAGE:\r\n    case ICard.FIRE_MAGE:\r\n    case ICard.WIND_MAGE:\r\n    case ICard.THUNDER_MAGE:\r\n      return ICardType.MAGE\r\n    case ICard.EARTH_MISSILE:\r\n    case ICard.WATER_MISSILE:\r\n    case ICard.FIRE_MISSILE:\r\n    case ICard.WIND_MISSILE:\r\n    case ICard.THUNDER_MISSILE:\r\n      return ICardType.MISSILE\r\n    case ICard.LIGHT_MAGILE:\r\n    case ICard.DARK_MAGILE:\r\n      return ICardType.MAGILE\r\n    case ICard.HETERO_IGNITE:\r\n    case ICard.HOMO_IGNITE:\r\n      return ICardType.IGNITE\r\n    case ICard.ANGEL_GUARD:\r\n      return ICardType.ANGEL_GUARD\r\n  }\r\n}\r\n\r\nexport const areCardsOfTypeOrMagile = (cards: ICard[], type: ICardType): boolean => {\r\n  return cards.reduce<boolean>((prev, curr) => {\r\n    const cardType = getCardType(curr)\r\n    return prev && (cardType === type || cardType === ICardType.MAGILE)\r\n  }, true)\r\n}\r\n\r\nexport const getCardColor = (card: ICard): ICardColor => {\r\n  switch (card) {\r\n    case ICard.EARTH_MAGE:\r\n    case ICard.EARTH_MISSILE:\r\n      return ICardColor.EARTH\r\n    case ICard.WATER_MAGE:\r\n    case ICard.WATER_MISSILE:\r\n      return ICardColor.WATER\r\n    case ICard.FIRE_MAGE:\r\n    case ICard.FIRE_MISSILE:\r\n      return ICardColor.FIRE\r\n    case ICard.WIND_MAGE:\r\n    case ICard.WIND_MISSILE:\r\n      return ICardColor.WIND\r\n    case ICard.THUNDER_MAGE:\r\n    case ICard.THUNDER_MISSILE:\r\n      return ICardColor.THUNDER\r\n    case ICard.LIGHT_MAGILE:\r\n      return ICardColor.LIGHT\r\n    case ICard.DARK_MAGILE:\r\n      return ICardColor.DARK\r\n    default:\r\n      return ICardColor.NONE\r\n  }\r\n}\r\n\r\nexport const areCardsOfColor = (cards: ICard[], color: ICardColor): boolean => {\r\n  return cards.reduce<boolean>((prev, curr) => {\r\n    return prev && getCardColor(curr) === color\r\n  }, true)\r\n}\r\n\r\nexport const areCardsOfDifferentColor = (cards: ICard[]): boolean => {\r\n  const seenColor = new Set()\r\n  const filteredCards = cards.filter((card) => getCardColor(card) !== ICardColor.NONE)\r\n  filteredCards.forEach((card) => {\r\n    seenColor.add(getCardColor(card))\r\n  })\r\n  return seenColor.size === filteredCards.length\r\n}\r\n\r\nexport const hasCardColorNone = (cards: ICard[]): boolean => {\r\n  return !!cards.find((card) => getCardColor(card) === ICardColor.NONE)\r\n}\r\n","import { NetworkReducer } from 'smnet'\r\nimport { GameState } from './GameState'\r\nimport { GameAction, GameActionType, PlayCardPayload } from './GameAction'\r\nimport { allColors, ICard, ICardColor, ICardType, IDeck, IMode, IPlayCard, IStateMapper } from './types'\r\nimport { compose, GameActionTypes, shuffle } from 'gamenet'\r\nimport { cardCount } from './constants'\r\nimport {\r\n  areCardsOfColor,\r\n  areCardsOfDifferentColor,\r\n  areCardsOfTypeOrMagile,\r\n  basicDamage,\r\n  getCardColor,\r\n  getCardType,\r\n  hasCardColorNone\r\n} from './utils'\r\n\r\nconst getFullDeck = (): IDeck => {\r\n  return Object.entries(cardCount).flatMap(([card, count]) => Array(count).fill(card))\r\n}\r\n\r\nconst withDrawCard: (playerId: number) => IStateMapper = playerId => state => {\r\n  if (state.playerDeck[playerId].length >= state.playerHp[playerId]) {\r\n    throw new Error(`cannot draw, ${state.players[playerId]} already has ${state.playerHp[playerId]} cards`)\r\n  }\r\n  const card = state.drawDeck[0]\r\n  if (card === undefined) {\r\n    return withDrawCard(playerId)({ ...state, drawDeck: shuffle(state.trashDeck), trashDeck: [] })\r\n  } else {\r\n    const hand = [...state.playerDeck[playerId], card]\r\n    const playerDeck = [...state.playerDeck]\r\n    playerDeck[playerId] = hand\r\n    if (hand.length < state.playerHp[playerId]) {\r\n      return withDrawCard(playerId)({ ...state, playerDeck, drawDeck: state.drawDeck.slice(1) })\r\n    } else {\r\n      return { ...state, playerDeck, drawDeck: state.drawDeck.slice(1) }\r\n    }\r\n  }\r\n}\r\n\r\nconst withEnsureHp1CardNotFunctionCard: (playerId: number) => IStateMapper = playerId => state => {\r\n  if (state.playerHp[playerId] === 1) {\r\n    const cardType = getCardType(state.playerDeck[playerId][0])\r\n    if (state.playerDeck[playerId].length === 1 && cardType !== ICardType.MAGE && cardType !== ICardType.MISSILE)\r\n      return compose(\r\n        withEnsureHp1CardNotFunctionCard(playerId),\r\n        withDrawCard(playerId),\r\n        withDiscardCard({ cards: state.playerDeck[playerId] }, playerId)\r\n      )(state)\r\n  }\r\n  return state\r\n}\r\n\r\nconst withInitGame: IStateMapper = (prevState: GameState) => {\r\n  prevState = {\r\n    ...prevState,\r\n    turn: 0,\r\n    direction: 1,\r\n    points: 0,\r\n    drawDeck: [],\r\n    stage: [],\r\n    mode: null,\r\n    trashDeck: [],\r\n    playerDeck: [],\r\n    playerHp: [],\r\n    logs: [],\r\n    lastAction: null,\r\n    ignited: false,\r\n    duel: false,\r\n    winner: null\r\n  }\r\n  const fullDeck = getFullDeck()\r\n  prevState.drawDeck = shuffle(fullDeck)\r\n  for (let id = 0; id < prevState.players.length; id++) {\r\n    prevState.playerDeck[id] = []\r\n    prevState.playerHp[id] = 7\r\n    prevState = withDrawCard(id)(prevState)\r\n  }\r\n  return { ...prevState }\r\n}\r\n\r\nconst withDiscardCard: IPlayCard = ({ cards }, playerId) => state => {\r\n  const trashDeck = [...state.trashDeck, ...cards]\r\n  const hand = [...state.playerDeck[playerId]]\r\n  cards.forEach((card) => {\r\n    const index = hand.indexOf(card)\r\n    if (index === -1) {\r\n      throw new Error(`${state.players[playerId]} doesnt own card ${card}`)\r\n    }\r\n    hand.splice(index, 1)\r\n  })\r\n  const playerDeck = [...state.playerDeck]\r\n  playerDeck[playerId] = hand\r\n  return { ...state, trashDeck, playerDeck }\r\n}\r\n\r\nconst withPutToPlayed: IPlayCard = ({ cards }) => (state) => {\r\n  return { ...state, stage: [...state.stage, ...cards] }\r\n}\r\n\r\nconst withCardNumberValidation: IPlayCard = (_, playerId) => (state) => {\r\n  if (state.playerDeck[playerId].length > state.playerHp[playerId]) {\r\n    throw new Error(`Player deck amount is greater than his hp, please discard`)\r\n  }\r\n  return state\r\n}\r\n\r\nconst withCardTypeValidation: IPlayCard = ({ cards }, playerId) => state => {\r\n  if (cards.length === 3) {\r\n    if (cards.map(card => getCardColor(card)).includes(ICardColor.NONE)) {\r\n      throw new Error('cannot mix ignite or angel card with mage, missiles and magiles')\r\n    }\r\n    if (state.duel) {\r\n      if (cards.map(card => getCardType(card)).includes(ICardType.MAGILE)) {\r\n        throw new Error('cannot play function card during duel')\r\n      }\r\n    }\r\n  } else if (cards.length === 1) {\r\n    if (state.duel) {\r\n      const cardType = getCardType(cards[0])\r\n      if ([ICardType.MAGILE, ICardType.IGNITE, ICardType.ANGEL_GUARD].includes(cardType)) {\r\n        throw new Error('cannot play function card during duel')\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('you can only play 1 card or 3 cards')\r\n  }\r\n  return state\r\n}\r\n\r\nconst withFirstPlayValidation: IPlayCard = ({ cards, mode }, playerId) => (state) => {\r\n  if (state.stage.length === 0) {\r\n    if (mode === null || mode === undefined) {\r\n      throw new Error('please specify homo transfer or hetero transfer as the first to transfer')\r\n    }\r\n    if (mode === IMode.HOMO && state.playerHp[(playerId + 1) % state.players.length] === 1) {\r\n      throw new Error('can only do hetero transfer when next player is 1 hp')\r\n    }\r\n    if (cards.length !== 1) {\r\n      throw new Error('please play one card as the first to transfer')\r\n    }\r\n    if (getCardType(cards[0]) !== ICardType.MAGE && getCardType(cards[0]) !== ICardType.MISSILE) {\r\n      throw new Error('cannot play function type as the first to transfer')\r\n    }\r\n    return { ...state, mode }\r\n  }\r\n  return state\r\n}\r\n\r\nconst withPlayHomo: IPlayCard = ({ cards }) => state => {\r\n  if (state.mode === IMode.HOMO && !state.ignited) {\r\n    if (state.stage.length === 0) {\r\n      return { ...state }\r\n    }\r\n    const cardColor = getCardColor(cards[0])\r\n    if (cardColor !== ICardColor.NONE) {\r\n      if (!areCardsOfColor(cards, getCardColor(state.stage[0]))) {\r\n        throw new Error(`cannot play color other than ${cardColor} in this homo transfer`)\r\n      }\r\n      return { ...state }\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nconst withPlayHetero: IPlayCard = ({ cards }) => state => {\r\n  if (state.mode === IMode.HETERO && !state.ignited) {\r\n    if (state.stage.length === 0) {\r\n      return { ...state }\r\n    }\r\n    if (!hasCardColorNone(cards)) {\r\n      if (!areCardsOfDifferentColor([...state.stage, ...cards])) {\r\n        const stageColors = state.stage.map(card => getCardColor(card))\r\n        throw new Error(`Color ${cards.map(card => getCardColor(card)).filter(color => stageColors.includes(color)).join(', ')} were played. You may play ${allColors.filter(color => !stageColors.includes(color)).join(',')} during this hetero transfer`)\r\n      } else if (!areCardsOfTypeOrMagile(cards, getCardType(state.stage[0]))) {\r\n        if (state.duel) {\r\n          throw new Error(`You may play ${getCardType(state.stage[0])} only`)\r\n        } else {\r\n          throw new Error(`You may play ${getCardType(state.stage[0])} or magile only`)\r\n        }\r\n      } else {\r\n        return { ...state }\r\n      }\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nconst withPlayIgnite: IPlayCard = ({ cards }) => state => {\r\n  if (cards.length === 1) {\r\n    const card = cards[0]\r\n    if (card === ICard.HETERO_IGNITE) {\r\n      if (state.mode === IMode.HETERO) {\r\n        return { ...state, ignited: true }\r\n      } else {\r\n        throw new Error('cannot play hetero_ignite during homo transfer')\r\n      }\r\n    }\r\n    if (card === ICard.HOMO_IGNITE) {\r\n      if (state.mode === IMode.HOMO) {\r\n        return { ...state, ignited: true }\r\n      } else {\r\n        throw new Error('cannot play homo_ignite during hetero transfer')\r\n      }\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nconst withPlayAngleGuard: IPlayCard = ({ cards }) => state => {\r\n  if (cards.length === 1) {\r\n    if (cards[0] === ICard.ANGEL_GUARD) {\r\n      return { ...state }\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nconst withStateChangedValidation = (prevState: GameState): IPlayCard => () => state => {\r\n  if (prevState === state) {\r\n    throw new Error('invalid move')\r\n  }\r\n  return state\r\n}\r\n\r\nexport const withIncrementTurn: IStateMapper = prevState => {\r\n  const nextPlayerId = (prevState.turn + prevState.players.length + prevState.direction) % prevState.players.length\r\n  return { ...prevState, turn: nextPlayerId }\r\n}\r\n\r\nconst withPlayCard: (playerId: number, payload: PlayCardPayload) => IStateMapper = (playerId, payload) => prevState => {\r\n  if (prevState.turn !== playerId) {\r\n    throw new Error('not your turn')\r\n  }\r\n  const nextState = compose(\r\n    withCheckWin,\r\n    withCheckHit,\r\n    withIncrementTurn,\r\n    withEnsureHp1CardNotFunctionCard(playerId),\r\n    withDrawCard(playerId),\r\n    ...[\r\n      withPutToPlayed,\r\n      withDiscardCard,\r\n      withStateChangedValidation(prevState),\r\n      withPlayAngleGuard,\r\n      withPlayIgnite,\r\n      withPlayHetero,\r\n      withPlayHomo,\r\n      withCardTypeValidation,\r\n      withFirstPlayValidation,\r\n      withCardNumberValidation\r\n    ].map(playCard => playCard(payload, playerId))\r\n  )(prevState)\r\n  return { ...nextState, lastAction: { ...payload, playerId } }\r\n}\r\n\r\nexport const withCheckWin: IStateMapper = state => {\r\n  const playerIdLose = state.playerHp.findIndex(hp => hp <= 0)\r\n  if (playerIdLose !== -1) {\r\n    return { ...state, winner: playerIdLose }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const withCheckHit: IStateMapper = prevState => {\r\n  if (ableToResponse(prevState)) {\r\n    return prevState\r\n  } else {\r\n    return withHit(prevState)\r\n  }\r\n}\r\n\r\nconst ableToResponse = (state: GameState): boolean => {\r\n  const { ignited, duel, turn, mode } = state\r\n  const hand = state.playerDeck[turn]\r\n  if (!duel && !!hand.find(card => card === ICard.ANGEL_GUARD)) {\r\n    return true\r\n  }\r\n  if (mode === IMode.HETERO) {\r\n    if (!duel && !!hand.find(card => card === ICard.HETERO_IGNITE)) {\r\n      return true\r\n    }\r\n    if (ignited) {\r\n      return hand.includes(ICard.HETERO_IGNITE)\r\n    }\r\n    return hand\r\n      .filter(card => getCardColor(card) !== ICardColor.NONE)\r\n      .filter(card => duel ? getCardType(card) !== ICardType.MAGILE : true)\r\n      .filter(card => areCardsOfTypeOrMagile([card], getCardType(state.stage[0])))\r\n      .filter(card => !state.stage.map(card => getCardColor(card)).includes(getCardColor(card))).length > 0\r\n  } else {\r\n    if (!duel && !!hand.find(card => card === ICard.HOMO_IGNITE)) {\r\n      return true\r\n    }\r\n    if (ignited) {\r\n      return hand.includes(ICard.HOMO_IGNITE)\r\n    }\r\n    return hand\r\n      .filter(card => getCardColor(card) === getCardColor(state.stage[0]))\r\n      .length > 0\r\n  }\r\n}\r\n\r\nconst withHit = (state: GameState): GameState => {\r\n  if (state.mode !== null) {\r\n    const { turn } = state\r\n    const igniteCount = state.stage.filter(card => getCardType(card) === ICardType.IGNITE).length\r\n    const basic = basicDamage(state.stage.filter(card => getCardColor(card) !== ICardColor.NONE).length, state.mode)\r\n    const hit = basic + igniteCount + (state.duel ? 1 : 0)\r\n    const playerHp = [...state.playerHp]\r\n    playerHp[turn] -= hit\r\n    return {\r\n      ...state,\r\n      playerHp,\r\n      ignited: false,\r\n      duel: state.duel || playerHp[turn] <= 3,\r\n      mode: null\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nexport const withLog: (log: string) => IStateMapper = log => prevState => {\r\n  return { ...prevState, logs: [...prevState.logs, log] }\r\n}\r\n\r\nconst withCheckDiscardToHp: IPlayCard = (payload, playerId) => state => {\r\n  if (state.playerDeck[playerId].length - payload.cards.length !== state.playerHp[playerId]) {\r\n    throw new Error(`should discard ${state.playerDeck[playerId].length - state.playerHp[playerId]} cards`)\r\n  }\r\n  return state\r\n}\r\n\r\nconst withClearStage: IStateMapper = state => {\r\n  return {\r\n    ...state,\r\n    stage: [],\r\n    trashDeck: [...state.stage],\r\n    lastAction: null\r\n  }\r\n}\r\n\r\nexport const GameReducer: NetworkReducer<GameState, GameAction> = (prevState, action) => {\r\n  const peerId = action.peerId\r\n  if (peerId === undefined) {\r\n    throw new Error('Expect peerId in action')\r\n  }\r\n  const playerId = (): number => {\r\n    const id = prevState.nameDict[prevState.members[peerId]]\r\n    if (id === undefined) {\r\n      throw new Error('game not started')\r\n    }\r\n    return id\r\n  }\r\n  switch (action.type) {\r\n    case GameActionTypes.START:\r\n      return withInitGame(prevState)\r\n    case GameActionType.PLAY_CARD:\r\n      return withPlayCard(playerId(), action.payload)(JSON.parse(JSON.stringify(prevState)))\r\n    case GameActionType.DISCARD_CARD:\r\n      return compose(withClearStage, ...[withDiscardCard, withCheckDiscardToHp].map(step => step(action.payload, playerId())))(JSON.parse(JSON.stringify(prevState)))\r\n    case GameActionType.TAKE_HIT:\r\n      return withCheckWin(withHit(prevState))\r\n    case GameActionType.END:\r\n      return { ...prevState, started: false, ready: {} }\r\n  }\r\n  return prevState\r\n}\r\n","import { GameState } from './GameState'\r\nimport { GameAction, GameActionType } from './GameAction'\r\nimport { shuffle } from 'gamenet'\r\n\r\n\r\nexport const aiAction = (state: GameState, turn: number): GameAction => {\r\n  throw new Error('reached an edge case')\r\n}\r\n","import React, { createContext, FunctionComponent, useContext, useEffect } from 'react'\r\nimport { BoardGameContextInterface, useBoardGameNetwork } from 'gamenet'\r\nimport { GameState } from './GameState'\r\nimport { GameReducer } from './GameReducer'\r\nimport { GameAction } from './GameAction'\r\nimport { aiAction } from './aiAction'\r\n\r\nconst Poker99Context = createContext<BoardGameContextInterface<GameState, GameAction> | null>(null)\r\n\r\nexport const withGameNetwork = (Component: FunctionComponent): FunctionComponent => {\r\n  const WithGameNetwork: FunctionComponent = props => {\r\n    const network = useBoardGameNetwork(GameReducer, new GameState())\r\n    const {myAis, state,dispatchAs} = network\r\n    useEffect(() => {\r\n      if (aiAction !== undefined && myAis.includes(state.players[state.turn]) && state.started && state.winner === null) {\r\n        const cb = (): void => {\r\n          const action = aiAction(state, state.turn)\r\n          // action.peerId = Object.keys(state.members).filter(peerId => state.members[peerId] === state.players[state.turn])[0]\r\n          dispatchAs(state.turn, action).catch(console.error)\r\n        }\r\n        const n = window.setTimeout(cb, 1000)\r\n        return () => {\r\n          window.clearTimeout(n)\r\n        }\r\n      }\r\n    }, [dispatchAs, myAis, state])\r\n    return (\r\n      <Poker99Context.Provider value={network}>\r\n        <Component {...props} />\r\n    </Poker99Context.Provider>\r\n  )\r\n  }\r\n  WithGameNetwork.displayName = 'WithGameNetwork'\r\n  return WithGameNetwork\r\n}\r\n\r\nexport const usePoker99 = (): BoardGameContextInterface<GameState, GameAction> => {\r\n  const network: BoardGameContextInterface<GameState, GameAction> | null = useContext(Poker99Context)\r\n  if (network === null) {\r\n    throw new Error('please wrap it using withGameNetwork before calling this hook')\r\n  }\r\n  return network\r\n}\r\n","import angel_guard from './angel_guard.png'\nimport dark_magile from './dark_magile.png'\nimport earth_mage from './earth_mage.png'\nimport earth_missile from './earth_missile.png'\nimport fire_mage from './fire_mage.png'\nimport fire_missile from './fire_missile.png'\nimport hetero_ignite from './hetero_ignite.png'\nimport homo_ignite from './homo_ignite.png'\nimport light_magile from './light_magile.png'\nimport thunder_mage from './thunder_mage.png'\nimport thunder_missile from './thunder_missile.png'\nimport water_mage from './water_mage.png'\nimport water_missile from './water_missile.png'\nimport wind_mage from './wind_mage.png'\nimport wind_missile from './wind_missile.png'\n\nexport const cardImages = {\n  angel_guard,\n  dark_magile,\n  earth_mage,\n  earth_missile,\n  fire_mage,\n  fire_missile,\n  hetero_ignite,\n  homo_ignite,\n  light_magile,\n  thunder_mage,\n  thunder_missile,\n  water_mage,\n  water_missile,\n  wind_mage,\n  wind_missile\n}\n","export default __webpack_public_path__ + \"static/media/angel_guard.16ea5f11.png\";","export default __webpack_public_path__ + \"static/media/dark_magile.1e723600.png\";","export default __webpack_public_path__ + \"static/media/earth_mage.e84ed39c.png\";","export default __webpack_public_path__ + \"static/media/earth_missile.c93568e4.png\";","export default __webpack_public_path__ + \"static/media/fire_mage.0e5240db.png\";","export default __webpack_public_path__ + \"static/media/fire_missile.6d251f43.png\";","export default __webpack_public_path__ + \"static/media/hetero_ignite.4942ab4f.png\";","export default __webpack_public_path__ + \"static/media/homo_ignite.0dedd4a2.png\";","export default __webpack_public_path__ + \"static/media/light_magile.787bb1b9.png\";","export default __webpack_public_path__ + \"static/media/thunder_mage.fea8f838.png\";","export default __webpack_public_path__ + \"static/media/thunder_missile.bb1203a2.png\";","export default __webpack_public_path__ + \"static/media/water_mage.c01f4c8a.png\";","export default __webpack_public_path__ + \"static/media/water_missile.fb44c368.png\";","export default __webpack_public_path__ + \"static/media/wind_mage.64b5492a.png\";","export default __webpack_public_path__ + \"static/media/wind_missile.c08191d4.png\";","import React, { FunctionComponent } from 'react'\r\nimport { ICard } from '../types'\r\nimport { makeStyles, Paper } from '@material-ui/core'\r\nimport { cardImages } from '../assets'\r\nimport { CheckCircleOutline } from 'mdi-material-ui'\r\nimport { green, red } from '@material-ui/core/colors'\r\nimport { CancelOutlined } from '@material-ui/icons'\r\n\r\nconst useStyle = makeStyles(() => ({\r\n  root: {\r\n    padding: '16px',\r\n    width: '110px',\r\n    height: '160px',\r\n    borderRadius: '8px',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    transition: 'transform 0.1s ease-in-out',\r\n    transformOrigin: 'center',\r\n    '&:hover': {\r\n      // transform: 'translateY(-50%)'\r\n    }\r\n  }\r\n}))\r\n\r\nexport const Card: FunctionComponent<{\r\n  card: ICard, onClick?: () => void, disabled?: boolean, style?: Record<string, unknown>, selected?: boolean, isDelete?: boolean\r\n}> = (\r\n  {\r\n    style,\r\n    card,\r\n    onClick,\r\n    disabled,\r\n    selected,\r\n    isDelete\r\n  }) => {\r\n  const classes = useStyle()\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        pointerEvents: disabled ? 'none' : 'auto',\r\n        backgroundImage: `url(${cardImages[card]})`,\r\n        backgroundSize: 'cover',\r\n        position: 'relative',\r\n        ...style\r\n      }}\r\n      className={classes.root} onClick={!disabled ? onClick : undefined}>\r\n      <h2 style={{ fontFamily: 'Big Shoulders Inline Text, inherit', margin: 0, color: 'white', textShadow: '5px 3px 8px black' }}>\r\n        {card}\r\n      </h2>\r\n      {selected && <div style={{position: 'absolute', top: 0, right: 0}}>\r\n        {isDelete ? <CancelOutlined style={{ color: red[500] }} fontSize='large'/> : <CheckCircleOutline style={{ color: green[500] }} fontSize='large'/>}\r\n      </div>}\r\n      {/*<div>*/}\r\n      {/*  {selected ? 'yes' : 'no'}*/}\r\n      {/*  /!*  {hintText(card)}*!/*/}\r\n      {/*</div>*/}\r\n    </Paper>\r\n  )\r\n}\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport { usePoker99 } from './withGameNetwork'\r\nimport { GameAction, GameActionType, PlayCardPayload } from './GameAction'\r\nimport { ChooseCardFor, Deck } from './components/Deck'\r\n// import { PlayCardAdditionalModal } from './components/PlayCardAdditionalModal'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\n\r\nexport const Game: FunctionComponent = () => {\r\n  const {\r\n    state,\r\n    dispatch,\r\n    dispatchAs,\r\n    myPlayerId,\r\n    myLocals,\r\n    hideDeck,\r\n    setHideDeck,\r\n    error,\r\n    setError,\r\n    renderedDeckId\r\n  } = usePoker99()\r\n  const [throttledRenderedId, setTrottledRenderedId] = useState(renderedDeckId)\r\n  const handleError = (e: Error): void => {\r\n    console.error('HANDLE ERROR')\r\n    setError(e.message)\r\n  }\r\n  const myTurn = state.turn === myPlayerId || myLocals.includes(state.players[state.turn])\r\n  const dispatchHelper = async (action: GameAction) => {\r\n    try{\r\n      if (state.turn === myPlayerId) {\r\n        await dispatch(action).then(() => setError(''))\r\n      } else if (myLocals.includes(state.players[state.turn])) {\r\n        await dispatchAs(state.turn, action).then(() => setError(''))\r\n      } else {\r\n        throw new Error('Not my turn')\r\n      }\r\n    } catch (e) {\r\n      handleError(e)\r\n      throw e\r\n    }\r\n  }\r\n  const playCard = async (payload: PlayCardPayload) => {\r\n    const action: GameAction = {\r\n      type: GameActionType.PLAY_CARD,\r\n      payload\r\n    }\r\n    await dispatchHelper(action).then(() => {\r\n      if (myLocals.length > 0) {\r\n        setHideDeck(true)\r\n      }\r\n    })\r\n  }\r\n  const discardCard = async (payload: PlayCardPayload) => {\r\n    const action: GameAction = {\r\n      type: GameActionType.DISCARD_CARD,\r\n      payload\r\n    }\r\n    await dispatchHelper(action)\r\n  }\r\n  const takeHit = async () => {\r\n    const action: GameAction = {\r\n      type: GameActionType.TAKE_HIT,\r\n    }\r\n    await dispatchHelper(action)\r\n  }\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTrottledRenderedId(renderedDeckId)\r\n    }, 500)\r\n  }, [renderedDeckId])\r\n  const again = async (): Promise<void> => {\r\n    await dispatch({\r\n      type: GameActionType.END\r\n    }).catch(handleError)\r\n  }\r\n  let chooseCardFor = ChooseCardFor.RESPOND_PLAY\r\n  if(state.stage.length === 0) {\r\n    chooseCardFor = ChooseCardFor.FIRST_PLAY\r\n  }\r\n  if(throttledRenderedId !== undefined && throttledRenderedId !== null && state.playerDeck[throttledRenderedId].length > state.playerHp[throttledRenderedId]) {\r\n    chooseCardFor = ChooseCardFor.DISCARD\r\n  }\r\n  const handleCardChoose = async (payload: PlayCardPayload) => {\r\n    if(chooseCardFor === ChooseCardFor.DISCARD) {\r\n      await discardCard(payload)\r\n    } else {\r\n      await playCard(payload)\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ pointerEvents: 'all', color: 'white' }}>\r\n      {state.started && myPlayerId !== undefined &&\r\n      <Deck\r\n        cards={state.playerDeck[throttledRenderedId ?? myPlayerId]}\r\n        onCardsChoose={handleCardChoose}\r\n        chooseCardFor={chooseCardFor}\r\n        hide={hideDeck}\r\n        reveal={() => setHideDeck(false)}\r\n        takeHit={takeHit}\r\n        myTurn={myTurn}\r\n      />}\r\n      <div style={{ maxHeight: '50%' }}>\r\n        {state.logs.slice().reverse().map((s, k) => <div key={k}>{s}</div>)}\r\n      </div>\r\n      <Dialog open={error !== ''} onClose={() => setError('')} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle>Error</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {error}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setError('')} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import React, { FunctionComponent, useEffect, useState } from 'react'\r\nimport { usePoker99 } from '../withGameNetwork'\r\nimport { GameActionType } from '../GameAction'\r\nimport { Card } from './Card'\r\nimport { IDeck, IMode } from '../types'\r\nimport { computeDamage } from '../utils'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst Name: FunctionComponent = (props) => (\r\n  <div {...props}/>\r\n)\r\n\r\nexport const GameRenderer = () => {\r\n  const { state, myPlayerId, dispatch } = usePoker99()\r\n  const [prevCardPayload, setPrevCardPayload] = useState<null | IDeck>(null)\r\n  const [startAnimateCard, setStartAnimateCard] = useState(false)\r\n  const [showAnimateCard, setShowAnimateCard] = useState(false)\r\n  useEffect(() => {\r\n    setShowAnimateCard(true)\r\n    setTimeout(() => {\r\n      setStartAnimateCard(true)\r\n    }, 1)\r\n    setTimeout(() => {\r\n      setPrevCardPayload(state.stage)\r\n      setStartAnimateCard(false)\r\n      setShowAnimateCard(false)\r\n    }, 300)\r\n  }, [state.lastAction])\r\n  const mp = (id: number): number => (id + state.playerHp.length) % state.playerHp.length\r\n  const center = {\r\n    top: '50vh',\r\n    left: '50vw'\r\n  }\r\n  const again = async (): Promise<void> => {\r\n    await dispatch({\r\n      type: GameActionType.END\r\n    }).catch(console.error)\r\n  }\r\n  const status = (() => {\r\n    if (state.started) {\r\n      if(state.winner !== null) {\r\n        return `Loser is ${state.players[state.winner]}`\r\n      }\r\n      if (state.playerDeck[state.turn].length > state.playerHp[state.turn]) {\r\n        return `${state.players[state.turn]} discard card til ${state.playerHp[state.turn]}`\r\n      }\r\n      if (state.stage.length === 0) {\r\n        return `${state.players[state.turn]} initializing transfer`\r\n      } else {\r\n        return `${state.players[state.turn]} responding to ${state.mode === IMode.HOMO ? 'homo' : 'hetero'} transfer. Current damage: ${computeDamage(state)}`\r\n      }\r\n    }\r\n    return undefined\r\n  })()\r\n  const hint = (() => {\r\n    if(state.started) {\r\n      if(state.winner !== null) {\r\n        return `Game Over`\r\n      }\r\n      if(state.duel) {\r\n        return 'DUEL! NO Function card and each hit will deduct 1 more hp!'\r\n      }\r\n      if(state.ignited) {\r\n        return 'IGNITED! Respond only with same ignited or angel guard!'\r\n      }\r\n    }\r\n    return undefined\r\n  })()\r\n  return (\r\n    !state.started\r\n      ? <div\r\n        style={{ backgroundColor: 'green', position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, color: 'white' }}\r\n      />\r\n      : <div\r\n        style={{\r\n          backgroundColor: 'green',\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          color: 'white',\r\n          boxShadow: state.duel ? 'inset 0 0 100px #ff9d9d' : undefined,\r\n          transition: 'box-shadow 0.3s ease-in-out'\r\n        }}>\r\n      <div style={{display: 'flex', justifyContent: 'space-around', margin: 'auto'}}>\r\n        {\r\n          new Array(state.players.length).fill(0).map((_, k) => mp(k + (myPlayerId ?? 0))).filter(id => id !== (myPlayerId ?? 0)).map(id => (\r\n            <div style={{border: `solid ${state.turn === id ? 'red' : 'transparent'} 2px`, padding: '16px 32px'}}>\r\n              {state.players[id]} : {state.playerHp[id]}\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n        {/*{myPlayerId === undefined && <Name offset={0}/>}*/}\r\n        {prevCardPayload !== null &&\r\n        <div style={{ position: 'absolute', ...center }}>\r\n          <div style={{ transform: 'translate(-50%,-50%)', textAlign: 'center' }}>\r\n            {hint && <h3>{hint}</h3>}\r\n            <h1>{status}</h1>\r\n            {state.winner !== undefined && state.winner !== null && <div>\r\n              <Button variant=\"contained\" color='primary' onClick={again}>again</Button>\r\n            </div>}\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              {prevCardPayload.map(card => <div style={{ padding: '8px' }}><Card card={card} disabled/></div>)}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {showAnimateCard && state.lastAction !== null && <div style={{\r\n          display: 'flex',\r\n          position: 'absolute',\r\n          left: '50vw',\r\n          top: startAnimateCard ? '50vh' : state.lastAction.playerId === myPlayerId ? '100vh' : '-100%',\r\n          transition: ['top', 'bottom', 'left', 'right'].map(s => `${s} 0.2s ease-in-out`).join(',')\r\n        }}>\r\n          <div style={{ transform: 'translate(-50%,-50%)', display: 'flex' }}>\r\n            {state.lastAction.cards.map(card => <div style={{ padding: '8px' }}><Card card={card} disabled/></div>)}\r\n          </div>\r\n        </div>}\r\n        <h3 style={{ position: 'absolute', bottom: 0, right: '20px' }}>Draw Deck: {state.drawDeck.length}</h3>\r\n      </div>\r\n  )\r\n}\r\n","import { en } from './en'\r\nimport { zh } from './zh'\r\n\r\nexport const i18ns = {\r\n  en,\r\n  zh\r\n}\r\n","import { gamenetI18n } from 'gamenet-material'\r\nimport React from 'react'\r\n\r\nexport const en = {\r\n  ...gamenetI18n.en,\r\n  magile: 'Magile',\r\n  howToPlay: 'How To Play',\r\n  howToPlayContent: (\r\n    <div>\r\n      TBA\r\n    </div>\r\n  )\r\n}\r\n","import { gamenetI18n } from 'gamenet-material'\r\nimport React from 'react'\r\n\r\nexport const zh = {\r\n  ...gamenetI18n.zh,\r\n  magile: '魔法飛彈大作戰',\r\n  howToPlay: '玩法',\r\n  howToPlayContent: (\r\n    <div>\r\n      還沒有哦\r\n    </div>\r\n  )\r\n}\r\n","import React, { FunctionComponent } from 'react'\nimport { usePoker99, withGameNetwork } from './withGameNetwork'\nimport { GamePagesSlider, Home, LanguageButton, Room, useGamenetI18n, withGamenetI18n } from 'gamenet-material'\nimport { Game } from './Game'\nimport { GameRenderer } from './components/GameRenderer'\nimport { i18ns } from './i18ns'\nimport { DialogContent } from '@material-ui/core'\n\nconst App: FunctionComponent = withGamenetI18n({ i18ns })(withGameNetwork(() => {\n  const network = usePoker99()\n  const { i18n } = useGamenetI18n()\n  return (\n    <GamePagesSlider gameAppState={network.gameAppState} fullPage={[false, false, true]} GameRenderer={<GameRenderer/>}>\n      <Home {...network} gameName={i18n.magile}>\n        <DialogContent>\n          <h2>{i18n.howToPlay}</h2>\n          <div>{i18n.howToPlayContent}</div>\n        </DialogContent>\n      </Home>\n      <Room {...network} />\n      <Game/>\n      <div style={{ position: 'fixed', top: 0, right: 0, zIndex: 100 }}>\n        <LanguageButton/>\n      </div>\n    </GamePagesSlider>\n  )\n}))\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}